import { test, expect } from '@playwright/test';

test.describe('Teste - Rollback da funÃ§Ã£o getMovieSequels', () => {
  test('deve mostrar sequÃªncias quando hÃ¡ e filmes similares quando nÃ£o hÃ¡', async ({ page }) => {
    console.log('ðŸš€ Teste do rollback da funÃ§Ã£o getMovieSequels...');

    // Navegar para a pÃ¡gina
    await page.goto('http://localhost:8080', { waitUntil: 'domcontentloaded' });

    // Configurar API se necessÃ¡rio
    const modalExists = await page
      .locator('[role="dialog"]:has-text("Configurar API")')
      .count();
    
    if (modalExists > 0) {
      const apiKeyInput = page.locator('input[placeholder*="API"]');
      await apiKeyInput.fill('da143ff1f274e5987194fe5d22f71b11');
      
      const saveButton = page.locator('button:has-text("Confirmar e Entrar")');
      await saveButton.click();
      await page.waitForTimeout(2000);
    }

    // --- Teste para filme com sequÃªncias (Star Wars) ---
    await test.step('Testando Star Wars (com sequÃªncias)', async () => {
      await page.goto('http://localhost:8080/filme/11', { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(5000);

      // Verificar se a seÃ§Ã£o de sequÃªncias existe
      const sequelsSection = page.locator('text=SequÃªncias do Filme').first();
      await expect(sequelsSection).toBeVisible();

      // Verificar se os tÃ­tulos dos filmes estÃ£o visÃ­veis no DOM
      const especialNatalElement = page.locator('text=Especial de Natal').first();
      await expect(especialNatalElement).toBeVisible();

      const frangoRoboElement = page.locator('text=Frango RobÃ´').first();
      await expect(frangoRoboElement).toBeVisible();

      // Verificar se a mensagem de "sem sequÃªncias" NÃƒO aparece
      const noSequelsMessage = page.locator('text=Este filme nÃ£o possui sequÃªncias conhecidas');
      await expect(noSequelsMessage).not.toBeVisible();

      console.log('âœ… Star Wars: SequÃªncias detectadas corretamente');
    });

    // --- Teste para filme sem sequÃªncias (The Shawshank Redemption) ---
    await test.step('Testando The Shawshank Redemption (filmes similares)', async () => {
      await page.goto('http://localhost:8080/filme/278', { waitUntil: 'domcontentloaded' });
      await page.waitForTimeout(5000);

      // Verificar se a seÃ§Ã£o de filmes similares existe
      const similarSection = page.locator('text=Filmes Similares').first();
      await expect(similarSection).toBeVisible();

      // Verificar se hÃ¡ filmes similares sendo exibidos (pelo menos um card)
      const movieCards = page.locator('text=SequÃªncias do Filme').first().locator('xpath=..').locator('xpath=..').locator('.grid > div');
      const cardCount = await movieCards.count();
      
      // Deve ter pelo menos alguns filmes similares
      expect(cardCount).toBeGreaterThan(0);

      // Verificar se a mensagem de "sem sequÃªncias" NÃƒO aparece
      const noSequelsMessage = page.locator('text=Este filme nÃ£o possui sequÃªncias conhecidas');
      await expect(noSequelsMessage).not.toBeVisible();

      console.log(`âœ… The Shawshank Redemption: ${cardCount} filmes similares exibidos`);
    });

    // --- Teste para filme com nome genÃ©rico (The) ---
    await test.step('Testando filme com nome genÃ©rico', async () => {
      await page.goto('http://localhost:8080/filme/550', { waitUntil: 'domcontentloaded' }); // Fight Club
      await page.waitForTimeout(5000);

      // Verificar se a seÃ§Ã£o existe
      const section = page.locator('text=SequÃªncias do Filme, text=Filmes Similares').first();
      await expect(section).toBeVisible();

      // Verificar se hÃ¡ conteÃºdo sendo exibido
      const movieCards = section.locator('xpath=..').locator('xpath=..').locator('.grid > div');
      const cardCount = await movieCards.count();
      
      // Deve ter algum conteÃºdo (sequÃªncias ou similares)
      expect(cardCount).toBeGreaterThan(0);

      console.log(`âœ… Fight Club: ${cardCount} filmes relacionados exibidos`);
    });

    console.log('âœ… Todos os testes do rollback concluÃ­dos com sucesso!');
  });
});
