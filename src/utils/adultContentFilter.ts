/**
 * Utilit√°rio para filtrar conte√∫do adulto (+18)
 * Baseado em padr√µes identificados em filmes er√≥ticos/adultos
 */

// Palavras-chave que indicam conte√∫do adulto (em diferentes idiomas)
const ADULT_KEYWORDS = [
  // Portugu√™s
  'er√≥tico',
  'erotico',
  'adulto',
  'sensual',
  'sexual',
  'sexo',
  'nudez',
  'porn√¥',
  'porno',
  'sedu√ß√£o',
  'seducao',
  'tes√£o',
  'tesao',
  'prazer',
  'desejo',
  'paix√£o',
  'paixao',
  '√≠ntimo',
  'intimo',
  'provocante',
  'safado',
  'safada',
  'gostosa',
  'gostoso',
  'strip',
  'stripper',
  'prostituta',
  'prostituto',
  'escort',
  'acompanhante',

  // Ingl√™s
  'erotic',
  'adult',
  'sexual',
  'sex',
  'nude',
  'nudity',
  'porn',
  'pornographic',
  'seduction',
  'seductive',
  'sensual',
  'intimate',
  'provocative',
  'steamy',
  'hot',
  'sexy',
  'lust',
  'desire',
  'passion',
  'temptation',
  'forbidden',
  'strip',
  'stripper',
  'prostitute',
  'escort',
  'call girl',
  'gigolo',
  'affair',
  'infidelity',
  'cheating',
  'mistress',
  'lover',

  // Espanhol
  'er√≥tico',
  'adulto',
  'sexual',
  'sexo',
  'desnudo',
  'desnuda',
  'sensual',
  'seducci√≥n',
  'seduccion',
  'provocativo',
  'provocativa',
  'caliente',
  'pasi√≥n',
  'pasion',
  'deseo',
  'lujuria',
  'tentaci√≥n',
  'tentacion',

  // Franc√™s
  '√©rotique',
  'adulte',
  'sexuel',
  'sexe',
  'nu',
  'nue',
  'sensuel',
  's√©duction',
  'seduction',
  'provocant',
  'provocante',
  'chaud',
  'passion',
  'd√©sir',
  'desir',
  'luxure',
  'tentation',

  // Italiano
  'erotico',
  'adulto',
  'sessuale',
  'sesso',
  'nudo',
  'nuda',
  'sensuale',
  'seduzione',
  'provocante',
  'caldo',
  'passione',
  'desiderio',

  // Alem√£o
  'erotisch',
  'erwachsen',
  'sexuell',
  'sex',
  'nackt',
  'sinnlich',
  'verf√ºhrung',
  'verf√ºhrerisch',
  'hei√ü',
  'leidenschaft',
  'begierde',

  // Japon√™s (romanizado)
  'ecchi',
  'hentai',
  'ero',
  'seijin',
  'otona',

  // Coreano (romanizado)
  'seong-in',
  'ero',
  'sekseu',

  // Termos espec√≠ficos de filmes adultos
  'sorority',
  'fraternity',
  'college girls',
  'schoolgirl',
  'schoolboy',
  'milf',
  'cougar',
  'sugar daddy',
  'sugar baby',
  'webcam',
  'cam girl',
  'bdsm',
  'fetish',
  'kink',
  'dominatrix',
  'submissive',
  'bondage',
  'swinger',
  'threesome',
  'orgy',
  'gangbang',
  'bukkake',

  // T√≠tulos comuns em filmes adultos asi√°ticos
  'kalakal',
  'sorority',
  'kiskisan',
  'bubu',
  'gyohwan',

  // Termos asi√°ticos espec√≠ficos
  'pink film',
  'roman porno',
  'category iii',
  'cat iii',
  'av idol',
  'gravure',
  'jav',
  'pinku eiga',
  'eroduction',
  'softcore',
  'hardcore',
  'erotic thriller',
  'erotic drama',
  'sexual',
  'sensual',
  'seductive',
  'temptation',
  'desire',
  'lust',
  'passion',
  'intimate',
  'forbidden',
  'taboo',
  'scandal',
  'affair',
  'mistress',
  'lover',
  'seduction',

  // Termos em outros idiomas asi√°ticos (romanizados)
  'sarang', // amor em coreano
  'ai', // amor em japon√™s
  'ren ai', // romance em japon√™s
  'ecchi na', // pervertido em japon√™s
  'ero guro', // er√≥tico grotesco em japon√™s
];

// G√™neros que frequentemente cont√™m conte√∫do adulto
const ADULT_GENRE_IDS = [
  // N√£o h√° g√™nero espec√≠fico "adulto" no TMDB, mas alguns podem indicar
  // Vamos usar uma abordagem mais conservadora baseada em outros crit√©rios
];

// Classifica√ß√µes et√°rias que indicam conte√∫do adulto
const ADULT_RATINGS = [
  'NC-17', // Estados Unidos - Nenhum menor de 17 anos
  'X', // Antiga classifica√ß√£o adulta
  'XXX', // Conte√∫do expl√≠cito
  'R18+', // Austr√°lia - Restrito a maiores de 18
  '18', // Reino Unido - Maiores de 18
  'M18', // Singapura - Maiores de 18
  'CAT III', // Hong Kong - Categoria III (adulto)
  'Unrated', // Sem classifica√ß√£o (pode ser adulto)
];

// Pa√≠ses conhecidos por produ√ß√£o de conte√∫do adulto
const ADULT_CONTENT_COUNTRIES = [
  'PH', // Filipinas (muitos filmes er√≥ticos independentes)
  'KR', // Coreia do Sul (alguns filmes er√≥ticos)
  'JP', // Jap√£o (filmes pink/roman porno)
  'TH', // Tail√¢ndia (alguns filmes er√≥ticos)
  'CN', // China (alguns filmes er√≥ticos independentes)
  'HK', // Hong Kong (Category III films)
  'TW', // Taiwan (alguns filmes er√≥ticos)
  'VN', // Vietn√£ (alguns filmes er√≥ticos)
  'ID', // Indon√©sia (alguns filmes er√≥ticos)
  'MY', // Mal√°sia (alguns filmes er√≥ticos)
];

// Produtoras/est√∫dios conhecidos por conte√∫do adulto
const ADULT_STUDIOS = [
  'Viva Films', // Filipinas - produz alguns filmes er√≥ticos
  'Regal Entertainment', // Filipinas - alguns filmes adultos
  'Pink Film', // Jap√£o - g√™nero de filmes er√≥ticos
  'Roman Porno', // Jap√£o - subg√™nero er√≥tico
];

/**
 * Verifica se um t√≠tulo cont√©m palavras-chave adultas
 */
const hasAdultKeywords = (text: string): boolean => {
  if (!text) return false;

  const normalizedText = text
    .toLowerCase()
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, ''); // Remove acentos

  return ADULT_KEYWORDS.some((keyword) => {
    const normalizedKeyword = keyword
      .toLowerCase()
      .normalize('NFD')
      .replace(/[\u0300-\u036f]/g, '');

    return normalizedText.includes(normalizedKeyword);
  });
};

/**
 * Verifica se a classifica√ß√£o et√°ria indica conte√∫do adulto
 */
const hasAdultRating = (certification: string): boolean => {
  if (!certification) return false;

  return ADULT_RATINGS.some((rating) =>
    certification.toUpperCase().includes(rating.toUpperCase())
  );
};

/**
 * Verifica se o pa√≠s de origem √© conhecido por conte√∫do adulto
 */
const isFromAdultContentCountry = (countries: string[]): boolean => {
  if (!countries || countries.length === 0) return false;

  return countries.some((country) =>
    ADULT_CONTENT_COUNTRIES.includes(country.toUpperCase())
  );
};

/**
 * Verifica se a produtora √© conhecida por conte√∫do adulto
 */
const hasAdultStudio = (studios: any[]): boolean => {
  if (!studios || studios.length === 0) return false;

  return studios.some((studio) =>
    ADULT_STUDIOS.some((adultStudio) =>
      studio.name?.toLowerCase().includes(adultStudio.toLowerCase())
    )
  );
};

/**
 * Verifica se o conte√∫do tem caracter√≠sticas de filme adulto baseado na popularidade e avalia√ß√£o
 */
const hasAdultContentPattern = (item: any): boolean => {
  // Filmes adultos tendem a ter:
  // - Popularidade baixa no TMDB (n√£o s√£o mainstream)
  // - Avalia√ß√£o m√©dia (nem muito alta nem muito baixa)
  // - Poucos votos (nicho espec√≠fico)

  const popularity = item.popularity || 0;
  const voteAverage = item.vote_average || 0;
  const voteCount = item.vote_count || 0;

  // Padr√£o suspeito: baixa popularidade + poucos votos + avalia√ß√£o m√©dia
  if (
    popularity < 10 &&
    voteCount < 100 &&
    voteAverage > 5 &&
    voteAverage < 8
  ) {
    return true;
  }

  return false;
};

/**
 * Fun√ß√£o principal para verificar se um item cont√©m conte√∫do adulto
 */
export const isAdultContent = (item: any): boolean => {
  if (!item) return false;

  // Verificar se o filtro est√° ativado
  const filterEnabled = localStorage.getItem('adult_content_filter') === 'true';
  const title =
    item.title || item.name || item.original_title || item.original_name || '';
  const overview = item.overview || '';
  const tagline = item.tagline || '';

  // Log detalhado para debugging
  console.log(
    `üîç Verificando item: "${title}" | Filtro ativado: ${filterEnabled}`
  );

  if (!filterEnabled) {
    console.log(`‚ö†Ô∏è Filtro desativado - item "${title}" n√£o ser√° verificado`);
    return false;
  }

  // LISTA NEGRA DE T√çTULOS ESPEC√çFICOS (din√¢mica)
  const blacklistedTitles = getBlacklistedTitles();

  const titleLower = title.toLowerCase();
  const overviewLower = overview.toLowerCase();

  // Verificar lista negra primeiro
  for (const blacklisted of blacklistedTitles) {
    if (titleLower.includes(blacklisted.toLowerCase())) {
      console.log(
        `üö´ T√çTULO NA LISTA NEGRA: "${title}" cont√©m "${blacklisted}"`
      );
      return true;
    }
  }

  // TESTE AGRESSIVO: Bloquear qualquer filme com palavras espec√≠ficas
  const testWords = [
    'sorority',
    'kalakal',
    'kiskisan',
    'bubu',
    'gyohwan',
    'pink',
    'erotic',
    'sexy',
    'hot',
    'sensual',
    'desire',
    'lust',
    'passion',
    'temptation',
    'seduction',
    'affair',
    'mistress',
    'forbidden',
    'taboo',
    // Palavras coreanas/asi√°ticas espec√≠ficas
    'ÍµêÌôò',
    'ÏóÑÎßà',
    'ÏïÑÎÇ¥',
    'ÎÖ∏Ï∂ú',
    'ÏöïÎßù',
    'Î™©Ï†Å',
    'Ïú†Ìòπ',
    'Î∞îÎûå',
    'ÏÉàÏóÑÎßà',
    'ÏπúÍµ¨Ïùò',
    'Í∞ÄÏä¥',
    'ÎèôÏ∞ΩÌöå',
    'Î∞∞Îã¨',
  ];

  for (const word of testWords) {
    if (titleLower.includes(word) || overviewLower.includes(word)) {
      console.log(
        `üîû TESTE AGRESSIVO: Bloqueando "${title}" por conter "${word}"`
      );
      return true;
    }
  }

  // DETEC√á√ÉO ESPEC√çFICA PARA FILMES ASI√ÅTICOS OBSCUROS
  const asianCountries = [
    'KR',
    'JP',
    'CN',
    'TH',
    'PH',
    'HK',
    'TW',
    'VN',
    'ID',
    'MY',
  ];
  const itemCountries =
    item.production_countries?.map((c: any) => c.iso_3166_1) ||
    item.origin_country ||
    [];
  const isAsian = itemCountries.some((country) =>
    asianCountries.includes(country)
  );

  if (isAsian) {
    const popularity = item.popularity || 0;
    const voteCount = item.vote_count || 0;
    const voteAverage = item.vote_average || 0;

    // DETEC√á√ÉO ULTRA AGRESSIVA para filmes asi√°ticos
    // Baseada nos filmes mostrados que t√™m avalia√ß√µes 2.5-9.8
    if (
      // Qualquer filme com popularidade baixa
      popularity < 20 ||
      // Ou poucos votos (independente da nota)
      voteCount < 500 ||
      // Ou combina√ß√£o suspeita de nota e votos
      (voteCount < 1000 && voteAverage > 5) ||
      // Ou t√≠tulo muito curto (comum em filmes adultos)
      title.length < 15 ||
      // Ou qualquer filme de 2015-2025 (per√≠odo comum de filmes adultos asi√°ticos)
      (item.release_date && new Date(item.release_date).getFullYear() >= 2015)
    ) {
      console.log(
        `üîû FILME ASI√ÅTICO ULTRA SUSPEITO: "${title}" (pop: ${popularity}, votes: ${voteCount}, avg: ${voteAverage}, year: ${item.release_date})`
      );
      return true;
    }
  }

  // DETEC√á√ÉO ESPEC√çFICA PARA FILMES FILIPINOS (muito comum conte√∫do adulto)
  const isFilipino =
    itemCountries.includes('PH') ||
    titleLower.includes('ligaw') ||
    titleLower.includes('tuhog') ||
    titleLower.includes('maalikaya');

  if (isFilipino) {
    console.log(`üîû FILME FILIPINO DETECTADO - BLOQUEANDO: "${title}"`);
    return true;
  }

  // 1. Verificar palavras-chave no t√≠tulo
  if (hasAdultKeywords(title)) {
    console.log(`üîû Conte√∫do adulto detectado por t√≠tulo: ${title}`);
    return true;
  }

  // 2. Verificar palavras-chave na sinopse
  if (hasAdultKeywords(overview)) {
    console.log(`üîû Conte√∫do adulto detectado por sinopse: ${title}`);
    return true;
  }

  // 3. Verificar palavras-chave no tagline
  if (hasAdultKeywords(tagline)) {
    console.log(`üîû Conte√∫do adulto detectado por tagline: ${title}`);
    return true;
  }

  // 4. Verificar se √© filme adulto baseado no campo 'adult' do TMDB
  if (item.adult === true) {
    console.log(`üîû Conte√∫do adulto detectado por flag 'adult': ${title}`);
    return true;
  }

  // 5. Verificar classifica√ß√£o et√°ria
  if (item.release_dates?.results) {
    const hasAdultCert = item.release_dates.results.some((release: any) =>
      release.release_dates?.some((date: any) =>
        hasAdultRating(date.certification)
      )
    );
    if (hasAdultCert) {
      console.log(`üîû Conte√∫do adulto detectado por classifica√ß√£o: ${title}`);
      return true;
    }
  }

  // 6. Verificar pa√≠s de origem (MUITO AGRESSIVO para pa√≠ses asi√°ticos)
  const countries =
    item.production_countries?.map((c: any) => c.iso_3166_1) ||
    item.origin_country ||
    [];
  if (isFromAdultContentCountry(countries)) {
    const popularity = item.popularity || 0;
    const voteCount = item.vote_count || 0;

    // Para filmes asi√°ticos, ser MUITO mais restritivo
    if (
      // Qualquer palavra-chave suspeita
      hasAdultKeywords(title) ||
      hasAdultKeywords(overview) ||
      hasAdultKeywords(tagline) ||
      // OU baixa popularidade (indicativo de filme nicho/adulto)
      popularity < 15 ||
      // OU poucos votos (filme obscuro)
      voteCount < 200 ||
      // OU padr√£o suspeito
      hasAdultContentPattern(item)
    ) {
      console.log(
        `üîû Conte√∫do adulto detectado por pa√≠s asi√°tico + crit√©rios: ${title} (pop: ${popularity}, votes: ${voteCount})`
      );
      return true;
    }
  }

  // 7. Verificar produtoras
  if (hasAdultStudio(item.production_companies || [])) {
    console.log(`üîû Conte√∫do adulto detectado por produtora: ${title}`);
    return true;
  }

  // 8. Detec√ß√£o por padr√£o de popularidade baixa + palavras suspeitas
  if (hasAdultContentPattern(item)) {
    // Se tem padr√£o suspeito E alguma palavra-chave, bloquear
    const suspiciousText = `${title} ${overview} ${tagline}`.toLowerCase();
    const hasSuspiciousWords = [
      'sorority',
      'kalakal',
      'kiskisan',
      'bubu',
      'gyohwan',
      'sexy',
      'hot',
      'sensual',
    ].some((word) => suspiciousText.includes(word));

    if (hasSuspiciousWords) {
      console.log(
        `üîû Conte√∫do adulto detectado por padr√£o + palavras suspeitas: ${title}`
      );
      return true;
    }
  }

  return false;
};

/**
 * Filtra uma lista de itens removendo conte√∫do adulto
 */
export const filterAdultContent = (items: any[]): any[] => {
  const filterEnabled = localStorage.getItem('adult_content_filter') === 'true';

  console.log(
    `üîç Filtro de conte√∫do adulto: ${filterEnabled ? 'ATIVADO' : 'DESATIVADO'}`
  );

  if (!filterEnabled) {
    console.log(`üìã Retornando ${items.length} itens sem filtrar`);
    return items;
  }

  const originalCount = items.length;
  const filtered = items.filter((item) => {
    const isAdult = isAdultContent(item);
    if (isAdult) {
      const title = item.title || item.name || 'T√≠tulo desconhecido';
      console.log(`üö´ BLOQUEADO: ${title}`);
    }
    return !isAdult;
  });

  const blockedCount = originalCount - filtered.length;

  if (blockedCount > 0) {
    console.log(
      `üîû FILTRO APLICADO: ${blockedCount} de ${originalCount} itens bloqueados`
    );
  } else {
    console.log(
      `‚úÖ Nenhum conte√∫do adulto detectado em ${originalCount} itens`
    );
  }

  return filtered;
};

/**
 * Verifica se o filtro de conte√∫do adulto est√° ativado
 */
export const isAdultContentFilterEnabled = (): boolean => {
  return localStorage.getItem('adult_content_filter') === 'true';
};

/**
 * Ativa ou desativa o filtro de conte√∫do adulto
 */
export const setAdultContentFilter = (enabled: boolean): void => {
  localStorage.setItem('adult_content_filter', enabled.toString());
};

/**
 * Verifica se o usu√°rio atual √© o administrador Andr√© Sugai
 * Esta fun√ß√£o deve ser usada dentro de um componente React que tem acesso ao contexto de autentica√ß√£o
 */
export const isAdminUser = (userEmail?: string): boolean => {
  // Se o email for passado como par√¢metro, usar ele
  if (userEmail) {
    return userEmail === 'guitarfreaks@gmail.com';
  }

  // Fallback para localStorage (para compatibilidade)
  const storedEmail = localStorage.getItem('user_email');
  return storedEmail === 'guitarfreaks@gmail.com';
};

/**
 * Obt√©m a lista atual de t√≠tulos na blacklist
 */
export const getBlacklistedTitles = (): string[] => {
  const stored = localStorage.getItem('blacklisted_titles');
  const defaultTitles = [
    'Î∂ÄÎ∂Ä ÍµêÌôò',
    'Î∂ÄÎ∂ÄÍµêÌôò',
    'Î∂ÄÎ∂Ä ÍµêÌôò - Î¨¥ÏÇ≠Ï†ú',
    '–±–ª–∞–≥–æ—Å–ª–æ–≤–∏—Ç–µ –∂–µ–Ω—â–∏–Ω—É',
    '–±–ª–∞–≥–æ—Å–ª–æ–≤–∏—Ç–µ',
    'Í∞ÄÏä¥ ÌÅ∞ ÏùÑ ÏóÑÎßà',
    'Í∞ÄÏä¥ÌÅ∞ÏùÑÏóÑÎßà',
    'Í∞ÄÏä¥ ÌÅ∞ÏùÑ ÏóÑÎßà',
    'ÎÇ¥ ÏπúÍµ¨Ïùò ÏóÑÎßà',
    'ÎÇ¥ÏπúÍµ¨ÏùòÏóÑÎßà',
    'excitation au soleil',
    'eccitazione carnale',
    'Î∞îÎûåÎÇú ÏïÑÎÇ¥Îì§2',
    'Î∞îÎûåÎÇúÏïÑÎÇ¥Îì§',
    'Î∞∞Îã¨ÎÖ∏Ï∂ú',
    'Î∞∞Îã¨ÎÖ∏Ï∂ú:',
    'ÏïåÎ™∏ÏúºÎ°ú Ïú†ÌòπÌïòÍ∏∞',
    'ÏÉàÏóÑÎßàÏùò ÏöïÎßù',
    'ÏÉàÏóÑÎßàÏùòÏöïÎßù',
    'ligaw',
    'ÎèôÏ∞ΩÌöåÏùò Î™©Ï†Å',
    'ÎèôÏ∞ΩÌöåÏùòÎ™©Ï†Å',
    'tuhog',
    'maalikaya',
    'dirty ice cream',
    'dirty ice cream',
  ];

  if (!stored) {
    return defaultTitles;
  }

  try {
    const parsed = JSON.parse(stored);
    return Array.isArray(parsed) ? parsed : defaultTitles;
  } catch {
    return defaultTitles;
  }
};

/**
 * Adiciona um t√≠tulo √† blacklist
 */
export const addToBlacklist = (title: string, userEmail?: string): void => {
  if (!isAdminUser(userEmail)) {
    throw new Error(
      'Acesso negado: apenas administradores podem modificar a blacklist'
    );
  }

  const currentTitles = getBlacklistedTitles();
  const normalizedTitle = title.toLowerCase().trim();

  // Verificar se j√° est√° na lista
  if (currentTitles.some((t) => t.toLowerCase() === normalizedTitle)) {
    throw new Error('Este t√≠tulo j√° est√° na blacklist');
  }

  const updatedTitles = [...currentTitles, normalizedTitle];
  localStorage.setItem('blacklisted_titles', JSON.stringify(updatedTitles));

  console.log(`üö´ ADMINISTRADOR: T√≠tulo "${title}" adicionado √† blacklist`);
};

/**
 * Remove um t√≠tulo da blacklist
 */
export const removeFromBlacklist = (
  title: string,
  userEmail?: string
): void => {
  if (!isAdminUser(userEmail)) {
    throw new Error(
      'Acesso negado: apenas administradores podem modificar a blacklist'
    );
  }

  const currentTitles = getBlacklistedTitles();
  const normalizedTitle = title.toLowerCase().trim();

  const updatedTitles = currentTitles.filter(
    (t) => t.toLowerCase() !== normalizedTitle
  );
  localStorage.setItem('blacklisted_titles', JSON.stringify(updatedTitles));

  console.log(`‚úÖ ADMINISTRADOR: T√≠tulo "${title}" removido da blacklist`);
};

/**
 * Verifica se um t√≠tulo est√° na blacklist
 */
export const isInBlacklist = (title: string): boolean => {
  const blacklistedTitles = getBlacklistedTitles();
  const normalizedTitle = title.toLowerCase().trim();

  return blacklistedTitles.some((blacklisted) => {
    const normalizedBlacklisted = blacklisted.toLowerCase().trim();
    return (
      normalizedTitle.includes(normalizedBlacklisted) ||
      normalizedBlacklisted.includes(normalizedTitle)
    );
  });
};
