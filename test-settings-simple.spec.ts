import { test, expect } from '@playwright/test';

/**
 * Teste simples para verificar as 3 abas na p√°gina de configura√ß√µes
 */
test.describe('Painel de Configura√ß√µes - Verifica√ß√£o Simples', () => {
  test('deve verificar se as 3 abas foram implementadas corretamente', async ({
    page,
  }) => {
    console.log('üîç Verificando implementa√ß√£o das 3 abas...');

    // Acessa diretamente a p√°gina de configura√ß√µes
    await page.goto('http://localhost:8081/configuracoes');
    await page.waitForLoadState('networkidle');

    // Verifica se a p√°gina carregou
    const pageTitle = page.locator('h2:has-text("Configura√ß√µes")');
    await expect(pageTitle).toBeVisible();
    console.log('‚úÖ P√°gina de configura√ß√µes carregada');

    // Verifica se as 3 abas est√£o presentes
    const tabsList = page.locator('[role="tablist"]');
    await expect(tabsList).toBeVisible();

    const tabs = page.locator('[role="tab"]');
    const tabsCount = await tabs.count();

    console.log(`üìä N√∫mero de abas encontradas: ${tabsCount}`);
    expect(tabsCount).toBe(3);

    // Verifica se os nomes das abas est√£o corretos
    const expectedTabNames = ['Estat√≠sticas', 'Configura√ß√µes', 'Perfil'];
    for (let i = 0; i < expectedTabNames.length; i++) {
      const tab = tabs.nth(i);
      const tabText = await tab.textContent();
      console.log(`üìã Aba ${i + 1}: ${tabText}`);
      expect(tabText).toContain(expectedTabNames[i]);
    }

    // Verifica se h√° √≠cones nas abas
    const tabIcons = page.locator('[role="tab"] svg');
    const iconsCount = await tabIcons.count();
    console.log(`üé® √çcones nas abas: ${iconsCount}`);
    expect(iconsCount).toBe(3);

    // Testa navega√ß√£o entre abas
    console.log('üîÑ Testando navega√ß√£o entre abas...');
    for (let i = 0; i < 3; i++) {
      const tab = tabs.nth(i);
      await tab.click();
      await page.waitForTimeout(500);

      // Verifica se a aba est√° ativa
      await expect(tab).toHaveAttribute('data-state', 'active');
      console.log(`‚úÖ Aba ${i + 1} ativada`);
    }

    // Verifica se o conte√∫do das abas est√° presente
    console.log('üìã Verificando conte√∫do das abas...');

    // Aba de Estat√≠sticas
    const statsTab = page.locator('[role="tab"]:has-text("Estat√≠sticas")');
    await statsTab.click();
    await page.waitForTimeout(500);

    const statsContent = page.locator('text=Estat√≠sticas do Usu√°rio');
    await expect(statsContent).toBeVisible();
    console.log('‚úÖ Conte√∫do da aba Estat√≠sticas presente');

    // Aba de Configura√ß√µes
    const settingsTab = page.locator('[role="tab"]:has-text("Configura√ß√µes")');
    await settingsTab.click();
    await page.waitForTimeout(500);

    const settingsContent = page.locator('text=Configura√ß√µes de Funcionamento');
    await expect(settingsContent).toBeVisible();
    console.log('‚úÖ Conte√∫do da aba Configura√ß√µes presente');

    // Aba de Perfil
    const profileTab = page.locator('[role="tab"]:has-text("Perfil")');
    await profileTab.click();
    await page.waitForTimeout(500);

    const profileContent = page.locator('text=Configura√ß√£o de Perfil');
    await expect(profileContent).toBeVisible();
    console.log('‚úÖ Conte√∫do da aba Perfil presente');

    // Verifica design cinematogr√°fico
    console.log('üé® Verificando design cinematogr√°fico...');
    const cards = page.locator('.bg-gradient-cinema');
    const cardsCount = await cards.count();
    console.log(`üé® Cards com tema cinematogr√°fico: ${cardsCount}`);
    expect(cardsCount).toBeGreaterThan(0);

    // Testa responsividade
    console.log('üì± Testando responsividade...');
    await page.setViewportSize({ width: 375, height: 667 });

    // Verifica se as abas ainda est√£o vis√≠veis em mobile
    await expect(tabsList).toBeVisible();

    // Testa navega√ß√£o em mobile
    await statsTab.click();
    await page.waitForTimeout(500);
    await expect(statsContent).toBeVisible();

    console.log('‚úÖ Responsividade funcionando');

    // Resultado final
    console.log('');
    console.log('üéâ VERIFICA√á√ÉO COMPLETA FINALIZADA!');
    console.log('');
    console.log('‚úÖ RESULTADOS:');
    console.log('   ‚úÖ 3 abas implementadas corretamente');
    console.log('   ‚úÖ Nomes das abas corretos');
    console.log('   ‚úÖ √çcones presentes');
    console.log('   ‚úÖ Navega√ß√£o entre abas funcionando');
    console.log('   ‚úÖ Conte√∫do espec√≠fico de cada aba presente');
    console.log('   ‚úÖ Design cinematogr√°fico aplicado');
    console.log('   ‚úÖ Responsividade funcionando');
    console.log('');
    console.log('üéØ NOVO PAINEL DE CONFIGURA√á√ïES IMPLEMENTADO COM SUCESSO!');
  });
});
