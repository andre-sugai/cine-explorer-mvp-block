import { test, expect } from '@playwright/test';

test.describe('Teste - Mensagem explicativa para filmes similares', () => {
  test('deve mostrar mensagem explicativa quando nÃ£o hÃ¡ sequÃªncias e mostra filmes similares', async ({
    page,
  }) => {
    console.log('ðŸš€ Teste da mensagem explicativa para filmes similares...');

    // Configurar captura de logs do console
    page.on('console', (msg) => {
      console.log(`Browser console: ${msg.text()}`);
    });

    // Navegar para a pÃ¡gina
    await page.goto('http://localhost:8080', { waitUntil: 'domcontentloaded' });

    // Configurar API se necessÃ¡rio
    const modalExists = await page
      .locator('[role="dialog"]:has-text("Configurar API")')
      .count();

    if (modalExists > 0) {
      const apiKeyInput = page.locator('input[placeholder*="API"]');
      await apiKeyInput.fill('da143ff1f274e5987194fe5d22f71b11');

      const saveButton = page.locator('button:has-text("Confirmar e Entrar")');
      await saveButton.click();
      await page.waitForTimeout(2000);
    }

    // --- Teste para filme sem sequÃªncias (The Shawshank Redemption) ---
    await test.step('Testando The Shawshank Redemption (filmes similares com mensagem)', async () => {
      await page.goto('http://localhost:8080/filme/278', {
        waitUntil: 'domcontentloaded',
      });
      await page.waitForTimeout(5000);

      // Verificar se a seÃ§Ã£o existe
      const section = page
        .locator('text=SugestÃ£o com Base neste filme')
        .first();
      await expect(section).toBeVisible();

      // Verificar se a mensagem explicativa estÃ¡ sendo exibida
      const explanatoryMessage = page
        .locator('text=NÃ£o foram encontradas sequÃªncias')
        .first();
      await expect(explanatoryMessage).toBeVisible();

      // Verificar se a mensagem contÃ©m o texto completo
      const fullMessage = page
        .locator('text=sugestÃµes baseadas neste filme')
        .first();
      await expect(fullMessage).toBeVisible();

      // Verificar se hÃ¡ filmes similares sendo exibidos
      const movieCards = page
        .locator('text=SugestÃ£o com Base neste filme')
        .first()
        .locator('xpath=..')
        .locator('xpath=..')
        .locator('.grid > div');
      const cardCount = await movieCards.count();

      console.log(
        `ðŸ“Š The Shawshank Redemption: ${cardCount} filmes similares exibidos`
      );
      expect(cardCount).toBeGreaterThan(0);

      // Verificar se a badge de estratÃ©gia estÃ¡ sendo exibida
      const strategyBadge = page.locator('text=Filmes similares').first();
      await expect(strategyBadge).toBeVisible();

      console.log(
        'âœ… The Shawshank Redemption: Mensagem explicativa exibida corretamente'
      );
    });

    // --- Teste para filme com sequÃªncias (Star Wars) - nÃ£o deve mostrar a mensagem ---
    await test.step('Testando Star Wars (sequÃªncias - sem mensagem explicativa)', async () => {
      await page.goto('http://localhost:8080/filme/11', {
        waitUntil: 'domcontentloaded',
      });
      await page.waitForTimeout(5000);

      // Verificar se a seÃ§Ã£o existe
      const section = page.locator('text=SequÃªncias do Filme').first();
      await expect(section).toBeVisible();

      // Verificar se a mensagem explicativa NÃƒO estÃ¡ sendo exibida
      const explanatoryMessage = page
        .locator('text=NÃ£o foram encontradas sequÃªncias')
        .first();
      await expect(explanatoryMessage).not.toBeVisible();

      // Verificar se hÃ¡ sequÃªncias sendo exibidas
      const movieCards = page
        .locator('text=SequÃªncias do Filme')
        .first()
        .locator('xpath=..')
        .locator('xpath=..')
        .locator('.grid > div');
      const cardCount = await movieCards.count();

      console.log(`ðŸ“Š Star Wars: ${cardCount} sequÃªncias exibidas`);
      expect(cardCount).toBeGreaterThan(0);

      console.log('âœ… Star Wars: Mensagem explicativa nÃ£o exibida (correto)');
    });

    console.log(
      'âœ… Todos os testes da mensagem explicativa concluÃ­dos com sucesso!'
    );
  });
});
